// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.hcmus.tis.controller;

import java.io.UnsupportedEncodingException;
import javax.servlet.http.HttpServletRequest;
import org.hcmus.tis.controller.StudyClassController;
import org.hcmus.tis.model.StudyClass;
import org.hcmus.tis.repository.ProjectRepository;
import org.hcmus.tis.repository.StudyClassRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect StudyClassController_Roo_Controller {
    
    @Autowired
    StudyClassRepository StudyClassController.studyClassRepository;
    
    @Autowired
    ProjectRepository StudyClassController.projectRepository;
    
    @RequestMapping(params = "form", produces = "text/html")
    public String StudyClassController.createForm(Model uiModel) {
        populateEditForm(uiModel, new StudyClass());
        return "studyclasses/create";
    }
    
    @RequestMapping(value = "/{id}", produces = "text/html")
    public String StudyClassController.show(@PathVariable("id") Long id, Model uiModel) {
        uiModel.addAttribute("studyclass", studyClassRepository.findOne(id));
        uiModel.addAttribute("itemId", id);
        return "studyclasses/show";
    }
    
    @RequestMapping(produces = "text/html")
    public String StudyClassController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("studyclasses", studyClassRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / sizeNo, sizeNo)).getContent());
            float nrOfPages = (float) studyClassRepository.count() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("studyclasses", studyClassRepository.findAll());
        }
        return "studyclasses/list";
    }
    
    @RequestMapping(value = "/{id}", params = "form", produces = "text/html")
    public String StudyClassController.updateForm(@PathVariable("id") Long id, Model uiModel) {
        populateEditForm(uiModel, studyClassRepository.findOne(id));
        return "studyclasses/update";
    }
    
    void StudyClassController.populateEditForm(Model uiModel, StudyClass studyClass) {
        uiModel.addAttribute("studyClass", studyClass);
        uiModel.addAttribute("projects", projectRepository.findAll());
    }
    
    String StudyClassController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        } catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
