// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.hcmus.tis.model;

import java.util.List;
import org.hcmus.tis.model.WorkItemStatus;
import org.hcmus.tis.model.WorkItemStatusDataOnDemand;
import org.hcmus.tis.model.WorkItemStatusIntegrationTest;
import org.hcmus.tis.repository.PriorityRepository;
import org.hcmus.tis.repository.WorkItemStatusRepository;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

privileged aspect WorkItemStatusIntegrationTest_Roo_IntegrationTest {
    
    declare @type: WorkItemStatusIntegrationTest: @RunWith(SpringJUnit4ClassRunner.class);
    
    declare @type: WorkItemStatusIntegrationTest: @ContextConfiguration(locations = "classpath:/META-INF/spring/applicationContext*.xml");
    
    declare @type: WorkItemStatusIntegrationTest: @Transactional;
    @Autowired
    WorkItemStatusRepository WorkItemStatusIntegrationTest.workItemStatusRepository;
    @Autowired
    private WorkItemStatusDataOnDemand WorkItemStatusIntegrationTest.dod;
    
    @Test
    public void WorkItemStatusIntegrationTest.testCountWorkItemStatuses() {
        Assert.assertNotNull("Data on demand for 'WorkItemStatus' failed to initialize correctly", dod.getRandomWorkItemStatus());
        long count = workItemStatusRepository.count();
        Assert.assertTrue("Counter for 'WorkItemStatus' incorrectly reported there were no entries", count > 0);
    }
    
    @Test
    public void WorkItemStatusIntegrationTest.testFindWorkItemStatus() {
        WorkItemStatus obj = dod.getRandomWorkItemStatus();
        Assert.assertNotNull("Data on demand for 'WorkItemStatus' failed to initialize correctly", obj);
        Long id = obj.getId();
        Assert.assertNotNull("Data on demand for 'WorkItemStatus' failed to provide an identifier", id);
        obj = workItemStatusRepository.findOne(id);
        Assert.assertNotNull("Find method for 'WorkItemStatus' illegally returned null for id '" + id + "'", obj);
        Assert.assertEquals("Find method for 'WorkItemStatus' returned the incorrect identifier", id, obj.getId());
    }
    
    @Test
    public void WorkItemStatusIntegrationTest.testFindAllWorkItemStatuses() {
        Assert.assertNotNull("Data on demand for 'WorkItemStatus' failed to initialize correctly", dod.getRandomWorkItemStatus());
        long count = workItemStatusRepository.count();
        Assert.assertTrue("Too expensive to perform a find all test for 'WorkItemStatus', as there are " + count + " entries; set the findAllMaximum to exceed this value or set findAll=false on the integration test annotation to disable the test", count < 250);
        List<WorkItemStatus> result = workItemStatusRepository.findAll();
        Assert.assertNotNull("Find all method for 'WorkItemStatus' illegally returned null", result);
        Assert.assertTrue("Find all method for 'WorkItemStatus' failed to return any data", result.size() > 0);
    }
    
    @Test
    public void WorkItemStatusIntegrationTest.testFindWorkItemStatusEntries() {
    }
    
    @Test
    public void WorkItemStatusIntegrationTest.testFlush() {
        
    }
    
    @Test
    public void WorkItemStatusIntegrationTest.testMergeUpdate() {
        }
    
    @Test
    public void WorkItemStatusIntegrationTest.testPersist() {
       }
    
    @Test
    public void WorkItemStatusIntegrationTest.testRemove() {
 }
    
}
